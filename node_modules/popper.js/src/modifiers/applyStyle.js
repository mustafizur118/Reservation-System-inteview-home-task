import setStyles from '../utils/setStyles';
import setAttributes from '../utils/setAttributes';
import getReferenceOffsets from '../utils/getReferenceOffsets';
import computeAutoPlacement from '../utils/computeAutoPlacement';


export default function applyStyle(data) {
  
  setStyles(data.instance.popper, data.styles);

  
  setAttributes(data.instance.popper, data.attributes);

  
  if (data.arrowElement && Object.keys(data.arrowStyles).length) {
    setStyles(data.arrowElement, data.arrowStyles);
  }

  return data;
}


export function applyStyleOnLoad(
  reference,
  popper,
  options,
  modifierOptions,
  state
) {
  
  const referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);

  
  const placement = computeAutoPlacement(
    options.placement,
    referenceOffsets,
    popper,
    reference,
    options.modifiers.flip.boundariesElement,
    options.modifiers.flip.padding
  );

  popper.setAttribute('x-placement', placement);

  
  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });

  return options;
}
